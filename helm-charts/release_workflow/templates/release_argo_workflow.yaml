apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: {{ required "A valid unique wf name is required" .Values.workflowname }}
spec:
  entrypoint: release
  onExit: exit-handler
  imagePullSecrets:    # to authenticate to the docker registry
  - name: regcred
  volumeClaimTemplates:                 #define volume, same syntax as k8s Pod spec
  - metadata:
      name: argo-test-volume                     #name of volume claim
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi 
  templates:
  - name: release
    steps:
    - - name: checkout
        template: checkout
    - - name: build-container
        template: build
    - - name: deploy
        template: deploy
  - container:
      command:
      - /usr/local/bin/checkout.sh
      - /mnt/test-data-volume/src
      env:
      - name: PULL_NUMBER
        value: "{{ .Values.pull_number }}"
      - name: REPO_NAME
        value: "{{ .Values.repo_name }}"
      - name: REPO_OWNER
        value: "{{ .Values.repo_owner }}"
      - name: BUILD_NUMBER
        value: "{{ .Values.build_number }}"
      image: docker.io/raddaoui/raddaoui-cicd:5.0
      volumeMounts:
      - mountPath: /mnt/test-data-volume
        name: argo-test-volume
    name: checkout
  - container:
      command:
      - sh
      - -c
      - 'sha=`git log -n 1 --pretty=format:"%H"` && helm upgrade flask-app ./helm-charts/flask-app --set image=docker.io/raddaoui/flask-app:$sha'
      - 2>&1
      image: docker.io/raddaoui/raddaoui-cicd:5.0
      volumeMounts:
      - mountPath: /mnt/test-data-volume
        name: argo-test-volume
      workingDir: /mnt/test-data-volume/src/{{ .Values.repo_owner }}/{{ .Values.repo_name }}
    name: deploy
  - name: exit-handler
    steps:
      - - name: clean-up-ressources 
          template: clean
  - name: clean
    container:
      image: docker.io/raddaoui/raddaoui-cicd:5.0
      command: ["bash", "-c", "echo 'cleaning resources'"]
